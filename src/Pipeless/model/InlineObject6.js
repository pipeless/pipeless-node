/**
 * Pipeless
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjectLookup from './ObjectLookup';
import RelationshipDirection from './RelationshipDirection';
import RelationshipType from './RelationshipType';

/**
 * The InlineObject6 model module.
 * @module Pipeless/model/InlineObject6
 * @version 1.0
 */
class InlineObject6 {
    /**
     * Constructs a new <code>InlineObject6</code>.
     * @alias module:Pipeless/model/InlineObject6
     * @param _object {module:Pipeless/model/ObjectLookup} 
     */
    constructor(_object) { 
        
        InlineObject6.initialize(this, _object);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, _object) { 
        obj['object'] = _object;
    }

    /**
     * Constructs a <code>InlineObject6</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:Pipeless/model/InlineObject6} obj Optional instance to populate.
     * @return {module:Pipeless/model/InlineObject6} The populated <code>InlineObject6</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject6();

            if (data.hasOwnProperty('object')) {
                obj['object'] = ObjectLookup.constructFromObject(data['object']);
            }
            if (data.hasOwnProperty('relationship_types')) {
                obj['relationship_types'] = ApiClient.convertToType(data['relationship_types'], [RelationshipType]);
            }
            if (data.hasOwnProperty('direction')) {
                obj['direction'] = RelationshipDirection.constructFromObject(data['direction']);
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('before')) {
                obj['before'] = ApiClient.convertToType(data['before'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:Pipeless/model/ObjectLookup} object
 */
InlineObject6.prototype['object'] = undefined;

/**
 * Relationship types to include in the fetched activity (will include all by default)
 * @member {Array.<module:Pipeless/model/RelationshipType>} relationship_types
 */
InlineObject6.prototype['relationship_types'] = undefined;

/**
 * @member {module:Pipeless/model/RelationshipDirection} direction
 */
InlineObject6.prototype['direction'] = undefined;

/**
 * @member {Number} limit
 */
InlineObject6.prototype['limit'] = undefined;

/**
 * @member {String} before
 */
InlineObject6.prototype['before'] = undefined;






export default InlineObject6;


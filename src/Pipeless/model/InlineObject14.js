/**
 * Pipeless
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjectLookup from './ObjectLookup';

/**
 * The InlineObject14 model module.
 * @module Pipeless/model/InlineObject14
 * @version 1.0
 */
class InlineObject14 {
    /**
     * Constructs a new <code>InlineObject14</code>.
     * @alias module:Pipeless/model/InlineObject14
     * @param _object {module:Pipeless/model/ObjectLookup} 
     */
    constructor(_object) { 
        
        InlineObject14.initialize(this, _object);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, _object) { 
        obj['object'] = _object;
    }

    /**
     * Constructs a <code>InlineObject14</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:Pipeless/model/InlineObject14} obj Optional instance to populate.
     * @return {module:Pipeless/model/InlineObject14} The populated <code>InlineObject14</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject14();

            if (data.hasOwnProperty('object')) {
                obj['object'] = ObjectLookup.constructFromObject(data['object']);
            }
            if (data.hasOwnProperty('followed_relationship_type')) {
                obj['followed_relationship_type'] = ApiClient.convertToType(data['followed_relationship_type'], 'String');
            }
            if (data.hasOwnProperty('content_tagged_relationship_type')) {
                obj['content_tagged_relationship_type'] = ApiClient.convertToType(data['content_tagged_relationship_type'], 'String');
            }
            if (data.hasOwnProperty('content_tagged_object_type')) {
                obj['content_tagged_object_type'] = ApiClient.convertToType(data['content_tagged_object_type'], 'String');
            }
            if (data.hasOwnProperty('content_object_type')) {
                obj['content_object_type'] = ApiClient.convertToType(data['content_object_type'], 'String');
            }
            if (data.hasOwnProperty('content_published_relationship_type')) {
                obj['content_published_relationship_type'] = ApiClient.convertToType(data['content_published_relationship_type'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:Pipeless/model/ObjectLookup} object
 */
InlineObject14.prototype['object'] = undefined;

/**
 * The relationship type used to represent a user following another user. If this value is not provided, then collabrative filtering will not be used for the algo.
 * @member {module:Pipeless/model/InlineObject14.FollowedRelationshipTypeEnum} followed_relationship_type
 * @default 'followed'
 */
InlineObject14.prototype['followed_relationship_type'] = 'followed';

/**
 * The relationship type that represents content (created by users) being tagged. If this value is not provided, then tag data will not be used for the algo.
 * @member {module:Pipeless/model/InlineObject14.ContentTaggedRelationshipTypeEnum} content_tagged_relationship_type
 * @default 'taggedWith'
 */
InlineObject14.prototype['content_tagged_relationship_type'] = 'taggedWith';

/**
 * The object tyoe that represents a tag for the content a user can publish. If this value is not set, and content tagged relationship type has been set, then this will default to \"tag\".
 * @member {module:Pipeless/model/InlineObject14.ContentTaggedObjectTypeEnum} content_tagged_object_type
 */
InlineObject14.prototype['content_tagged_object_type'] = undefined;

/**
 * Object type of the content users publish. If this value is not set, and content tagged relationship type has been set, then this value will default to \"post\".
 * @member {module:Pipeless/model/InlineObject14.ContentObjectTypeEnum} content_object_type
 */
InlineObject14.prototype['content_object_type'] = undefined;

/**
 * Teh relationship type that represents a user publishing content. If this value is not set, and content tagged relationship type has been set, then this value will default to \"posted\".
 * @member {module:Pipeless/model/InlineObject14.ContentPublishedRelationshipTypeEnum} content_published_relationship_type
 */
InlineObject14.prototype['content_published_relationship_type'] = undefined;





/**
 * Allowed values for the <code>followed_relationship_type</code> property.
 * @enum {String}
 * @readonly
 */
InlineObject14['FollowedRelationshipTypeEnum'] = {

    /**
     * value: "posted"
     * @const
     */
    "posted": "posted",

    /**
     * value: "followed"
     * @const
     */
    "followed": "followed",

    /**
     * value: "liked"
     * @const
     */
    "liked": "liked",

    /**
     * value: "favorited"
     * @const
     */
    "favorited": "favorited",

    /**
     * value: "saved"
     * @const
     */
    "saved": "saved",

    /**
     * value: "disliked"
     * @const
     */
    "disliked": "disliked",

    /**
     * value: "purchased"
     * @const
     */
    "purchased": "purchased",

    /**
     * value: "commentedOn"
     * @const
     */
    "commentedOn": "commentedOn",

    /**
     * value: "created"
     * @const
     */
    "created": "created",

    /**
     * value: "viewed"
     * @const
     */
    "viewed": "viewed",

    /**
     * value: "reported"
     * @const
     */
    "reported": "reported",

    /**
     * value: "blocked"
     * @const
     */
    "blocked": "blocked",

    /**
     * value: "deleted"
     * @const
     */
    "deleted": "deleted",

    /**
     * value: "authored"
     * @const
     */
    "authored": "authored",

    /**
     * value: "used"
     * @const
     */
    "used": "used",

    /**
     * value: "dismissed"
     * @const
     */
    "dismissed": "dismissed",

    /**
     * value: "loggedIn"
     * @const
     */
    "loggedIn": "loggedIn",

    /**
     * value: "taggedWith"
     * @const
     */
    "taggedWith": "taggedWith",

    /**
     * value: "categorizedIn"
     * @const
     */
    "categorizedIn": "categorizedIn",

    /**
     * value: "interestedIn"
     * @const
     */
    "interestedIn": "interestedIn",

    /**
     * value: "locatedIn"
     * @const
     */
    "locatedIn": "locatedIn",

    /**
     * value: "readQuarter"
     * @const
     */
    "readQuarter": "readQuarter",

    /**
     * value: "readHalf"
     * @const
     */
    "readHalf": "readHalf",

    /**
     * value: "readAll"
     * @const
     */
    "readAll": "readAll",

    /**
     * value: "subscribedTo"
     * @const
     */
    "subscribedTo": "subscribedTo",

    /**
     * value: "subscribedFrom"
     * @const
     */
    "subscribedFrom": "subscribedFrom",

    /**
     * value: "addedTo"
     * @const
     */
    "addedTo": "addedTo",

    /**
     * value: "madeBy"
     * @const
     */
    "madeBy": "madeBy",

    /**
     * value: "pausedOn"
     * @const
     */
    "pausedOn": "pausedOn"
};


/**
 * Allowed values for the <code>content_tagged_relationship_type</code> property.
 * @enum {String}
 * @readonly
 */
InlineObject14['ContentTaggedRelationshipTypeEnum'] = {

    /**
     * value: "posted"
     * @const
     */
    "posted": "posted",

    /**
     * value: "followed"
     * @const
     */
    "followed": "followed",

    /**
     * value: "liked"
     * @const
     */
    "liked": "liked",

    /**
     * value: "favorited"
     * @const
     */
    "favorited": "favorited",

    /**
     * value: "saved"
     * @const
     */
    "saved": "saved",

    /**
     * value: "disliked"
     * @const
     */
    "disliked": "disliked",

    /**
     * value: "purchased"
     * @const
     */
    "purchased": "purchased",

    /**
     * value: "commentedOn"
     * @const
     */
    "commentedOn": "commentedOn",

    /**
     * value: "created"
     * @const
     */
    "created": "created",

    /**
     * value: "viewed"
     * @const
     */
    "viewed": "viewed",

    /**
     * value: "reported"
     * @const
     */
    "reported": "reported",

    /**
     * value: "blocked"
     * @const
     */
    "blocked": "blocked",

    /**
     * value: "deleted"
     * @const
     */
    "deleted": "deleted",

    /**
     * value: "authored"
     * @const
     */
    "authored": "authored",

    /**
     * value: "used"
     * @const
     */
    "used": "used",

    /**
     * value: "dismissed"
     * @const
     */
    "dismissed": "dismissed",

    /**
     * value: "loggedIn"
     * @const
     */
    "loggedIn": "loggedIn",

    /**
     * value: "taggedWith"
     * @const
     */
    "taggedWith": "taggedWith",

    /**
     * value: "categorizedIn"
     * @const
     */
    "categorizedIn": "categorizedIn",

    /**
     * value: "interestedIn"
     * @const
     */
    "interestedIn": "interestedIn",

    /**
     * value: "locatedIn"
     * @const
     */
    "locatedIn": "locatedIn",

    /**
     * value: "readQuarter"
     * @const
     */
    "readQuarter": "readQuarter",

    /**
     * value: "readHalf"
     * @const
     */
    "readHalf": "readHalf",

    /**
     * value: "readAll"
     * @const
     */
    "readAll": "readAll",

    /**
     * value: "subscribedTo"
     * @const
     */
    "subscribedTo": "subscribedTo",

    /**
     * value: "subscribedFrom"
     * @const
     */
    "subscribedFrom": "subscribedFrom",

    /**
     * value: "addedTo"
     * @const
     */
    "addedTo": "addedTo",

    /**
     * value: "madeBy"
     * @const
     */
    "madeBy": "madeBy",

    /**
     * value: "pausedOn"
     * @const
     */
    "pausedOn": "pausedOn"
};


/**
 * Allowed values for the <code>content_tagged_object_type</code> property.
 * @enum {String}
 * @readonly
 */
InlineObject14['ContentTaggedObjectTypeEnum'] = {

    /**
     * value: "user"
     * @const
     */
    "user": "user",

    /**
     * value: "product"
     * @const
     */
    "product": "product",

    /**
     * value: "image"
     * @const
     */
    "image": "image",

    /**
     * value: "comment"
     * @const
     */
    "comment": "comment",

    /**
     * value: "article"
     * @const
     */
    "article": "article",

    /**
     * value: "post"
     * @const
     */
    "post": "post",

    /**
     * value: "video"
     * @const
     */
    "video": "video",

    /**
     * value: "content"
     * @const
     */
    "content": "content",

    /**
     * value: "tag"
     * @const
     */
    "tag": "tag",

    /**
     * value: "category"
     * @const
     */
    "category": "category",

    /**
     * value: "app"
     * @const
     */
    "app": "app",

    /**
     * value: "book"
     * @const
     */
    "book": "book",

    /**
     * value: "person"
     * @const
     */
    "person": "person",

    /**
     * value: "skill"
     * @const
     */
    "skill": "skill",

    /**
     * value: "job"
     * @const
     */
    "job": "job",

    /**
     * value: "company"
     * @const
     */
    "company": "company",

    /**
     * value: "account"
     * @const
     */
    "account": "account",

    /**
     * value: "card"
     * @const
     */
    "card": "card",

    /**
     * value: "country"
     * @const
     */
    "country": "country",

    /**
     * value: "state"
     * @const
     */
    "state": "state",

    /**
     * value: "film"
     * @const
     */
    "film": "film",

    /**
     * value: "cart"
     * @const
     */
    "cart": "cart"
};


/**
 * Allowed values for the <code>content_object_type</code> property.
 * @enum {String}
 * @readonly
 */
InlineObject14['ContentObjectTypeEnum'] = {

    /**
     * value: "user"
     * @const
     */
    "user": "user",

    /**
     * value: "product"
     * @const
     */
    "product": "product",

    /**
     * value: "image"
     * @const
     */
    "image": "image",

    /**
     * value: "comment"
     * @const
     */
    "comment": "comment",

    /**
     * value: "article"
     * @const
     */
    "article": "article",

    /**
     * value: "post"
     * @const
     */
    "post": "post",

    /**
     * value: "video"
     * @const
     */
    "video": "video",

    /**
     * value: "content"
     * @const
     */
    "content": "content",

    /**
     * value: "tag"
     * @const
     */
    "tag": "tag",

    /**
     * value: "category"
     * @const
     */
    "category": "category",

    /**
     * value: "app"
     * @const
     */
    "app": "app",

    /**
     * value: "book"
     * @const
     */
    "book": "book",

    /**
     * value: "person"
     * @const
     */
    "person": "person",

    /**
     * value: "skill"
     * @const
     */
    "skill": "skill",

    /**
     * value: "job"
     * @const
     */
    "job": "job",

    /**
     * value: "company"
     * @const
     */
    "company": "company",

    /**
     * value: "account"
     * @const
     */
    "account": "account",

    /**
     * value: "card"
     * @const
     */
    "card": "card",

    /**
     * value: "country"
     * @const
     */
    "country": "country",

    /**
     * value: "state"
     * @const
     */
    "state": "state",

    /**
     * value: "film"
     * @const
     */
    "film": "film",

    /**
     * value: "cart"
     * @const
     */
    "cart": "cart"
};


/**
 * Allowed values for the <code>content_published_relationship_type</code> property.
 * @enum {String}
 * @readonly
 */
InlineObject14['ContentPublishedRelationshipTypeEnum'] = {

    /**
     * value: "posted"
     * @const
     */
    "posted": "posted",

    /**
     * value: "followed"
     * @const
     */
    "followed": "followed",

    /**
     * value: "liked"
     * @const
     */
    "liked": "liked",

    /**
     * value: "favorited"
     * @const
     */
    "favorited": "favorited",

    /**
     * value: "saved"
     * @const
     */
    "saved": "saved",

    /**
     * value: "disliked"
     * @const
     */
    "disliked": "disliked",

    /**
     * value: "purchased"
     * @const
     */
    "purchased": "purchased",

    /**
     * value: "commentedOn"
     * @const
     */
    "commentedOn": "commentedOn",

    /**
     * value: "created"
     * @const
     */
    "created": "created",

    /**
     * value: "viewed"
     * @const
     */
    "viewed": "viewed",

    /**
     * value: "reported"
     * @const
     */
    "reported": "reported",

    /**
     * value: "blocked"
     * @const
     */
    "blocked": "blocked",

    /**
     * value: "deleted"
     * @const
     */
    "deleted": "deleted",

    /**
     * value: "authored"
     * @const
     */
    "authored": "authored",

    /**
     * value: "used"
     * @const
     */
    "used": "used",

    /**
     * value: "dismissed"
     * @const
     */
    "dismissed": "dismissed",

    /**
     * value: "loggedIn"
     * @const
     */
    "loggedIn": "loggedIn",

    /**
     * value: "taggedWith"
     * @const
     */
    "taggedWith": "taggedWith",

    /**
     * value: "categorizedIn"
     * @const
     */
    "categorizedIn": "categorizedIn",

    /**
     * value: "interestedIn"
     * @const
     */
    "interestedIn": "interestedIn",

    /**
     * value: "locatedIn"
     * @const
     */
    "locatedIn": "locatedIn",

    /**
     * value: "readQuarter"
     * @const
     */
    "readQuarter": "readQuarter",

    /**
     * value: "readHalf"
     * @const
     */
    "readHalf": "readHalf",

    /**
     * value: "readAll"
     * @const
     */
    "readAll": "readAll",

    /**
     * value: "subscribedTo"
     * @const
     */
    "subscribedTo": "subscribedTo",

    /**
     * value: "subscribedFrom"
     * @const
     */
    "subscribedFrom": "subscribedFrom",

    /**
     * value: "addedTo"
     * @const
     */
    "addedTo": "addedTo",

    /**
     * value: "madeBy"
     * @const
     */
    "madeBy": "madeBy",

    /**
     * value: "pausedOn"
     * @const
     */
    "pausedOn": "pausedOn"
};



export default InlineObject14;

